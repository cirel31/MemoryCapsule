server:
  port: 9876

spring:
  application:
    name: user-service

#  rabbitmq:
#    host: ${SERVER_IP}
#    port: ${RABBITMQ_PORT}
#    username: ${RABBITMQ_ID}
#    password: ${RABBITMQ_PWD}
#  h2:
#    console:
#      enabled: true
#      settings:
#        web-allow-others: true
#      path: /h2-console
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:33060/santa
    username: root
    password: root
#    hikari:
#      maximum-pool-size: 4
#      connection-timeout: 5000
#      connection-init-sql: SELECT 1
  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  redis:
    host: localhost
    port: 6379

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    hostname: localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    fetch-registry: true
    register-with-eureka: true

logging:
  level:
    com.example.user-service.client: DEBUG # Feign Client Logging 설정

jwt:
  secret: asdfghjklqwertyuiopzxcvbnmasdfasdfweasdfwbzzgoooodItstootireddgdsasdfsawherhdsfbdfsgsadfsadvsvethegwfsdavbdfh
  token-validity-in-milliseconds: 100000000
  refresh-token: 987654321987654321

#management:
#  endpoints:
#    web:
#      exposure:
#        include: refresh, health, beans, bus-refresh, info, metrics, prometheus # 포함시킬 내용들
